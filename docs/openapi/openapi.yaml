openapi: 3.0.3
info:
  title: Exastro EPOCH API
  description: Exastro EPOCH API
  version: 2.0.0
servers:
  - url: 'https://{host}'
    description: API endpoint
    variables:
      host:
        default: localhost
  - url: 'http://{host}'
    description: API endpoint
    variables:
      host:
        default: localhost
  - url: '{protocol}://{host}:{port}'
    description: API endpoint (Development)
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      host:
        default: localhost
      port:
        default: '30080'
tags:
  - name: InternalHealthCheckService
    description: ヘルスチェックに関する操作(内部用)
  - name: InternalOrganizationService
    description: オーガナイゼーションに関する操作(内部用)
  - name: InternalWorkspaceService
    description: ワークスペースに関する操作(内部用)

  # TODO: 疎通試験用のため後で消してください - start
  - name: ConnectionTestService
    description: 疎通試験用
  # TODO: 疎通試験用のため後で消してください - end

paths:
  "/internal-api/health-check/liveness":
      $ref: './paths/InternalHealthCheckService/liveness.yaml'
  "/internal-api/health-check/readiness":
      $ref: './paths/InternalHealthCheckService/readiness.yaml'
  "/internal-api/{organization_id}/epoch/":
      $ref: './paths/InternalOrganizationService/organization.yaml'
  "/internal-api/{organization_id}/workspaces/{workspace_id}/epoch/":
      $ref: './paths/InternalWorkspaceService/workspace.yaml'
  # TODO: 疎通試験用のため後で消してください - start
  "/api/{organization_id}/workspaces/{workspace_id}/epoch/connection-test":
    get:
      tags:
        - ConnectionTestService
      summary: api connection test
      x-openapi-router-controller: controllers.connection_test_service_controller
      operationId: connection_test
      parameters:
      - name: organization_id
        in: path
        required: true
        schema:
          type: string
      - name: workspace_id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
  # TODO: 疎通試験用のため後で消してください - end

components:
  schemas:
    $ref: './schemas/_schemas.yaml'

  securitySchemes:
    BearerAuth:
      description: Credentials or access token for API
      type: http
      scheme: bearer
      bearerFormat: JWT
    BasicAuth:
      description: Value converted from ID/Password in base64
      type: http
      scheme: basic

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid

security:
- BearerAuth: []
- BasicAuth: []
