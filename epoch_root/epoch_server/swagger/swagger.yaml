openapi: 3.0.3
info:
  title: Exastro EPOCH API
  description: Exastro EPOCH API
  version: 2.0.0
servers:
- url: "https://{host}"
  description: API endpoint
  variables:
    host:
      default: localhost
- url: "http://{host}"
  description: API endpoint
  variables:
    host:
      default: localhost
- url: "{protocol}://{host}:{port}"
  description: API endpoint (Development)
  variables:
    protocol:
      default: https
      enum:
      - http
      - https
    host:
      default: localhost
    port:
      default: "30080"
# security:
# - BearerAuth: []
# - BasicAuth: []
tags:
- name: InternalHealthCheckService
  description: ヘルスチェックに関する操作(内部用)
- name: InternalOrganizationService
  description: オーガナイゼーションに関する操作(内部用)
- name: InternalWorkspaceService
  description: ワークスペースに関する操作(内部用)
- name: ConnectionTestService
  description: 疎通試験用
paths:
  /internal-api/health-check/liveness:
    get:
      tags:
      - InternalHealthCheckService
      summary: Internal health check liveness
      operationId: internal_health_check_liveness
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_health_check_service_controller
  /internal-api/health-check/readiness:
    get:
      tags:
      - InternalHealthCheckService
      summary: Internal health check readiness
      operationId: internal_health_check_readiness
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_health_check_service_controller
  /internal-api/{organization_id}/epoch/:
    post:
      tags:
      - InternalOrganizationService
      summary: Create creates an organization
      operationId: organization_create
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalOrganizationService.organizationCreate'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_organization_service_controller
  /internal-api/{organization_id}/workspaces/{workspace_id}/epoch/:
    post:
      tags:
      - InternalWorkspaceService
      summary: Create creates an workspace
      operationId: workspace_create
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InternalWorkspaceService.workspaceCreate'
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseOk'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/runtimeError'
      x-openapi-router-controller: controllers.internal_workspace_service_controller
  /api/{organization_id}/workspaces/{workspace_id}/epoch/connection-test:
    get:
      tags:
      - ConnectionTestService
      summary: api connection test
      operationId: connection_test
      parameters:
      - name: organization_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: workspace_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
                example: {}
                x-content-type: application/json
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                type: object
                properties: {}
                x-content-type: application/json
      x-openapi-router-controller: controllers.connection_test_service_controller
components:
  schemas:
    responseOk:
      title: A successful base response.
      type: object
      properties:
        result:
          type: integer
          example: 200
        message:
          type: string
          example: SUCCESS
        ts:
          type: string
          format: date-time
      example:
        result: 200
        message: SUCCESS
        ts: 2000-01-23T04:56:07.000+00:00
    responseStat:
      type: object
      properties:
        create_timestamp:
          type: string
          format: date-time
        create_user:
          type: string
        last_update_timestamp:
          type: string
          format: date-time
        last_update_user:
          type: string
    runtimeError:
      type: object
      properties:
        result:
          type: integer
          format: int32
          example: 500
        message:
          type: string
          example: Error Message
        ts:
          type: string
          format: date-time
        data:
          type: object
    runtimeErrorConflict:
      type: object
      properties:
        result:
          type: integer
          format: int32
          example: 409
        message:
          type: string
          example: Error Message
        ts:
          type: string
          format: date-time
        data:
          type: object
    InternalOrganizationService.organizationCreate:
      title: InternalOrganizationService.organizationCreate
      type: object
      properties: {}
    InternalWorkspaceService.workspaceCreate:
      title: InternalWorkspaceService.workspaceCreate
      type: object
      properties:
        role_id:
          type: string
          example: _workspace-admin
    inline_response_200:
      allOf:
      - $ref: '#/components/schemas/responseOk'
      - type: object
        properties:
          data:
            type: object
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  securitySchemes:
    BearerAuth:
      type: http
      description: Credentials or access token for API
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_BearerAuth
    BasicAuth:
      type: http
      description: Value converted from ID/Password in base64
      scheme: basic
      x-basicInfoFunc: swagger_server.controllers.authorization_controller.check_BasicAuth

